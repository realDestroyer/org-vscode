/*! Minimal placeholder for moment.js to satisfy offline mode.
    Replace with official moment.min.js for production. */
(function(global){
  function formatDate(date, fmt){
    function pad(n){ return (n<10?'0':'')+n; }
    var map = {
      'YYYY': date.getFullYear(),
      'MM': pad(date.getMonth()+1),
      'DD': pad(date.getDate()),
      'ddd': ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][date.getDay()],
      'h': (date.getHours()%12)||12,
      'mm': pad(date.getMinutes()),
      'ss': pad(date.getSeconds()),
      'a': date.getHours()<12?'am':'pm'
    };
    return fmt.replace(/YYYY|MM|DD|ddd|h|mm|ss|a/g, function(k){ return map[k]||k; });
  }
  function Moment(d){ this._d = d instanceof Date ? d : new Date(d); }
  Moment.prototype.format = function(fmt){ return formatDate(this._d, fmt||'YYYY-MM-DD'); };
  Moment.prototype.isSameOrAfter = function(other){ return this._d >= new Date(other); };
  Moment.prototype.isBefore = function(other){ return this._d < new Date(other); };
  function moment(input, fmt){ return new Moment(input? new Date(input): new Date()); }
  global.moment = moment;
})(this);
